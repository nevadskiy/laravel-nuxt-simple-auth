<?php
namespace Modules\Documents;
use Illuminate\Database\Eloquent\Factory;
use Illuminate\Support\ServiceProvider;
use Modules\Documents\Providers;
class DocumentsServiceProvider extends ServiceProvider
{
    /**
     * Module name.
     */
    private const MODULE_NAME = 'documents';
    /**
     * Register any application services.
     *
     * @return void
     */
    public function register(): void
    {
//        $this->registerConfig();
        $this->registerProviders();
    }
    /**
     * Bootstrap any application services.
     *
     * @return void
     */
    public function boot(): void
    {
        $this->bootFactories();
        $this->bootMigrations();
        $this->bootViews();
        $this->bootTranslations();
    }
    /**
     * Register module config.
     */
    private function registerConfig(): void
    {
        $this->mergeConfigFrom(__DIR__ . '/Config/config.php', self::MODULE_NAME);
    }
    /**
     * Register other module providers.
     */
    private function registerProviders(): void
    {
        $this->app->register(Providers\RouteServiceProvider::class);
        $this->app->register(Providers\AuthServiceProvider::class);
    }
    /**
     * Boot module factories.
     */
    private function bootFactories(): void
    {
        if (!$this->app->environment('production') && $this->app->runningInConsole()) {
            $this->app->get(Factory::class)->load(__DIR__ . '/Database/Factories');
        }
    }
    /**
     * Boot module migrations.
     */
    private function bootMigrations(): void
    {
        $this->loadMigrationsFrom(__DIR__ . '/Database/Migrations');
    }
    /**
     * Boot module views.
     */
    private function bootViews(): void
    {
        $this->loadViewsFrom(__DIR__ . '/Resources/views', self::MODULE_NAME);
    }
    /**
     * Boot module translations.
     */
    private function bootTranslations(): void
    {
        $this->loadJsonTranslationsFrom(__DIR__ . '/Resources/lang');
    }
}
